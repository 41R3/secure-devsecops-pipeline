name: DevSecOps Pipeline

on: [push, pull_request]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependencias
        run: |
          cd app
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Iniciar app Flask
        run: |
          cd app
          nohup python app.py > /dev/null 2>&1 &
          sleep 10

      - name: Escanear con OWASP ZAP
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          target: 'http://localhost:5000'
          cmd_options: '-a'
          artifact_name: 'zap-scan-results'
          allow_issue_writing: false

      - name: Guardar reporte ZAP
        run: |
          mkdir -p zap
          find . -name '*.html' -exec cp {} zap/ \;
          find . -name '*.md' -exec cp {} zap/ \;
          mv zap/report_html.html zap/zap-report.html || true
          mv zap/report_md.md zap/zap-report.md || true
        if: always()

      - name: Subir reportes ZAP
        uses: actions/upload-artifact@v3
        with:
          name: zap-reports
          path: zap/
        if: always()

  server-hardening:
    runs-on: ubuntu-latest
    needs: security-scan
    if: always()
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Instalar Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Ejecutar hardening CIS
        run: |
          cd ansible
          ansible-playbook playbook.yml
          cat hardening-report.txt

      - name: Subir reporte de hardening
        uses: actions/upload-artifact@v3
        with:
          name: hardening-report
          path: ansible/hardening-report.txt
