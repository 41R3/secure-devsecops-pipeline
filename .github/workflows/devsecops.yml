name: DevSecOps Pipeline

on: [push, pull_request]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Iniciar app Flask
        run: |
          cd app
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          nohup python app.py > /dev/null 2>&1 &
          sleep 10

      - name: Escanear con OWASP ZAP
        uses: zaproxy/action-full-scan@v0.11.0  # Versión actualizada
        with:
          target: 'http://localhost:5000'
          cmd_options: '-a'  # Continuar a pesar de advertencias
          artifact_name: 'zap-scan-results'
        
      - name: Guardar reporte ZAP
        run: |
          mkdir -p zap
          cp *.html zap/zap-report.html || echo "Reporte HTML guardado"
          cp *.md zap/zap-report.md || echo "Reporte MD guardado"
        if: always()

  server-hardening:
    runs-on: ubuntu-latest
    needs: security-scan
    if: always()  # Ejecutar siempre, incluso si falla el escaneo
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Instalar Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Ejecutar hardening CIS
        run: |
          cd ansible
          ansible-playbook playbook.yml
          cat hardening-report.txt

      - name: Subir reporte de hardening
        uses: actions/upload-artifact@v3
        with:
          name: hardening-report
          path: ansible/hardening-report.txt
